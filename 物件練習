<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <div id="app">
        <div class="row" id="content">
          <card :data="data"></card>
          <page-btn :page="page" @pagination="pageNum"></page-btn>
        </div>
      </div>
      
      <script type="module">
      // API 說明：https://api.kcg.gov.tw/ServiceList/Detail/9c8e1450-e833-499c-8320-29b36b7ace5c
      // API 路徑：https://api.kcg.gov.tw/api/service/Get/9c8e1450-e833-499c-8320-29b36b7ace5c
      // 備用 API：https://raw.githubusercontent.com/hexschool/KCGTravel/master/datastore_search.json
      const app = Vue.createApp({
        data(){
          return{
            jsonData:[],
            nowPage:'',
            page:{},
            data:[]
          }
        },
        methods:{
          getData(){
            const jsonUrl = "https://api.kcg.gov.tw/api/service/Get/9c8e1450-e833-499c-8320-29b36b7ace5c";
            axios.get(jsonUrl).then((res)=>{
              this.jsonData = res.data.data.XML_Head.Infos.Info;
              console.log(this.jsonData[0])
              this.pagination(this.jsonData, 1);
            })
          },
          pagination(jsonData, nowPage){
            console.log(nowPage)
            //取得全部長度
            const dataTotal = jsonData.length;
            
            //設定要顯示在畫面上的資料數量
            //預設每一夜只顯示 20 筆資料
            const perpage = 20;
            
            //page 按鈕總數公式 總資料數量 / 每一頁要顯示的資料
            //這邊要注意，一位有可能會出現餘數，所以要無條件進位。
            const pageTotal = Math.ceil(dataTotal / perpage)
      
            //當前頁數，對應現在當前頁數
            let currentPage = nowPage;
      
            //因為要避免當前頁數比總頁數還要多，假設今天總頁數是 3 筆，就不可能是 4 或 5
            //所以要在寫入一個判斷避免這種狀況。
            //當 "當前頁數" 比 "總頁數" 大的時候，"當前頁數" 就等於 "總頁數"
            //注意這一行在最前面並不是透過 nowPage 傳入賦予 currentPage ，所以才會寫這一個判斷式，但主要是預防一些無法預期的狀況，例如：nowPage 突然發神經
            if(currentPage > pageTotal){
              currentPage = pageTotal;
            }
      
            //由前面得知 最小數字為  ，所以用答案來回推公式。
            //每一頁所需要顯示的資料
            const minData = (currentPage * perpage) -perpage + 1;
            const maxData = (currentPage * perpage)
            console.log(minData)
            console.log(maxData)
      
            //先在data增加一個data=[]的檔案
            this.data=[];
            //這邊將會使用 ES6 forEach 做資料處理
            //首先必須使用索引來判斷資料位子，所以要使用index
            this.jsonData.forEach((item,index) => {
              //獲取陣列索引，但因為索引是從 0 開始所以要 +1 。
              let num = index + 1 ; 
              //這邊判斷是會比較複雜一點
              //當 num 比 minData 大且又小於 maxData 就 push 進去新陣列。
              if ( num >= minData && num <= maxData ){
                this.data.push(item);
              }
            });
            
            //用物件方式來傳遞資料
            this.page = {
                pageTotal,
                currentPage,
                hasPage : currentPage > 1 ,
                hasNext : currentPage < pageTotal
              }
          },
          pageNum(num){
            this.nowPage = num
          }
        },
        watch:{
          nowPage() {
            this.pagination(this.jsonData, this.nowPage);
          }
        },
        created(){
          this.getData();
        }
      })
      app.component('card',{
        props:["data"],
        template:` <div class="col-md-6 py-2" v-for="item in data" :key="item.Id">
                <div class="card" >
                  <div class="card bg-dark text-white text-left">
                    <img class="card-img-top img-cover" style="object-fit: cover; height:155px " :src="item.Picture1">
                    <div class="card-img-overlay d-flex justify-content-between align-items-end p-0 px-3" style="background-color: rgba(0, 0, 0, .2)">
                      <h5 class="card-img-title-lg">{{item.Name}}</h5><h5 class="card-img-title-sm">{{item.Zone}}</h5>
                    </div>
                  </div>
                  <div class="card-body text-left">
                      <p class="card-text"><i class="far fa-clock fa-clock-time"></i>&nbsp;{{item.Opentime}}</p>
                      <p class="card-text"><i class="fas fa-map-marker-alt fa-map-gps"></i>&nbsp;{{item.Add}}</p>
                      <p class="card-text"><i class="fas fa-mobile-alt fa-mobile"></i>&nbsp;{{item.Tel}}</p>
                      <template  v-if="item.Ticketinfo"> 
                        <div><p class="card-text"><i class="fas fa-tags text-warning"></i>&nbsp;{{item.Ticketinfo}}</p></div>
                      </template>
                  </div>
                </div>
            </div> `
      })
      app.component('pageBtn',{
        props:["page"],
        template:`  
              <div class="d-flex justify-content-center mt-4"> 
                <ul class="pagination" id="pageid" :page="page">
                  <li class="page-item" :class="{ disabled:!page.hasPage}">
                    <a class="page-link" href="#" @click.prevent="$emit('pagination',Number(page.currentPage) - 1)">Previous</a>
                  </li>
      
                  <li class="page-item" :page="page" v-for="i in page.pageTotal" :key="i" :class="{ active: i === Number(page.currentPage) }" >
                    <a class="page-link" href="#" :data-page="i" @click="$emit('pagination',i)">{{i}}</a>
                  </li>
      
                  <li class="page-item" :class="{ disabled:!page.hasNext }" ><a class="page-link" href="#" @click.prevent="$emit('pagination',Number(page.currentPage) + 1)">Next</a>
                  </li>
                </ul>
              </div>`
      
      })
      
      
      app.mount('#app')
      
      
      </script>
</body>
</html>
